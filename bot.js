require("dotenv").config();
const { Telegraf, Markup } = require("telegraf");
const express = require("express");
const { saveUserData, delay } = require("./googleSheetsFunc");
const { setupBotActions } = require("./botActions");

const bot = new Telegraf(process.env.BOT_TOKEN);

bot.start(async (ctx) => {
    const user = ctx.from;
    await saveUserData(user);
    await ctx.reply("–°–µ–π—á–∞—Å –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏ ü§ó", { parse_mode: "HTML" });

    await ctx.replyWithDocument(
        {
            source: "./assets/documents/nutrition.pdf",
            filename: "nutrition.pdf",
        },
        {
            caption: "–í–æ—Ç –≤–∞—à –¥–æ–∫—É–º–µ–Ω—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–∏—Ç–∞–Ω–∏–∏!",
            parse_mode: "HTML",
        },
    );

    await delay(5000);
    await ctx.reply(
        "üòé –ê —Ç–µ–ø–µ—Ä—å –ø–æ—Å–º–æ—Ç—Ä–∏, –∫–∞–∫–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–æ–∂–Ω–æ –¥–æ–±–∏—Ç—å—Å—è –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º –¥–æ–º–∞ –Ω–∞ —Ç–∞–∫–æ–º –≤–∫—É—Å–Ω–æ–º –∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–º –ø–∏—Ç–∞–Ω–∏–∏ ‚§µÔ∏è",
        { parse_mode: "HTML" },
    );

    await delay(2000);
    await ctx.replyWithMediaGroup([
        {
            type: "photo",
            media: { source: "./assets/images/change_1.jpg" },
        },
    ]);

    await delay(5000);
    await ctx.reply(
        "–ê —Ç–∞–∫ —Å—Ç—Ä–æ–π–Ω—ã–µ –¥–µ–≤—É—à–∫–∏ –∏–∑–±–∞–≤–ª—è—é—Ç—Å—è –æ—Ç —Ü–µ–ª–ª—é–ª–∏—Ç–∞, –¥–æ–±–∏–≤–∞—é—Ç—Å—è —Ä–µ–ª—å–µ—Ñ–∞ –∏ —É–ª—É—á—à–∞—é—Ç –æ—Å–∞–Ω–∫—É üòç‚§µÔ∏è",
        { parse_mode: "HTML" },
    );

    await delay(5000);
    await ctx.replyWithMediaGroup([
        {
            type: "photo",
            media: { source: "./assets/images/change_2.jpg" },
        },
    ]);

    await delay(5000);
    await ctx.reply(
        "–£–∑–Ω–∞–π –æ –º–æ—ë–º —Ñ–∏—Ç–Ω–µ—Å-–ø—Ä–æ–µ–∫—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ! üëá",
        Markup.inlineKeyboard(
            [Markup.button.callback("–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ", "FITNESS_PROJECT")],
            { resize_keyboard: true },
        ),
    );
});

setupBotActions(bot);

const app = express();
app.use(bot.webhookCallback("/bot"));
const PORT = process.env.PORT || 3000;
const WEBHOOK_URL = `${process.env.WEBHOOK_URL}/bot`;
bot.telegram.setWebhook(WEBHOOK_URL);

app.listen(PORT, () => {
    console.log(
        `–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}, –≤–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${WEBHOOK_URL}`,
    );
});
